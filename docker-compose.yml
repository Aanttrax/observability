services:
  nginx:
    image: nginx:latest
    container_name: nginx-observability
    expose:
      - 80
    volumes:
      - ./observability.conf:/etc/nginx/conf.d/observability.conf
    labels:
      - proyect=observability
      - environment=prod
      - services=nginx
      - name=nginx-observability
    depends_on:
      - grafana
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    #expose:
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    labels:
      - proyect=observability
      - environment=prod
      - services=frontend
      - name=grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: loki
    labels:
      - proyect=observability
      - environment=prod
      - services=databases
      - name=loki
    expose:
      - 3100
    volumes:
      - ./loki-config.yml:/etc/loki/config.yaml
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yml:/etc/promtail/config.yml
    labels:
      - proyect=observability
      - environment=prod
      - services=agent
      - name=promtail
    depends_on:
      - loki
    networks:
      - monitoring

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    expose:
      - 9100
    command:
      - --path.rootfs=/host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    labels:
      - proyect=observability
      - environment=prod
      - services=metrics
      - name=node_exporter
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    labels:
      - proyect=observability
      - environment=prod
      - services=metrics
      - name=cadvisor
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    expose:
      - 9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=1y
      - --web.enable-lifecycle
    labels:
      - proyect=observability
      - environment=prod
      - services=metrics
      - name=prometheus
    networks:
      - monitoring

volumes:
  grafana-data:
  prometheus-data:

networks:
  monitoring:
    driver: bridge
